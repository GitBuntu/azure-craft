variables:
  - name: deploymentDefaultLocation
    value: 'eastus'
  - name: environmentName
    value: 'prod'
  - name: bicepFile
    value: '$(System.DefaultWorkingDirectory)/environments/$(environmentName)/$(environmentName).bicep'
  - name: parametersFile
    value: '$(System.DefaultWorkingDirectory)/environments/$(environmentName)/$(environmentName).parameters.json'

stages:

- stage: Lint
  jobs:
  - job: LintCode
    displayName: 'Lint Code'
    steps:
      - script: |
          echo "Linting Bicep file: $(bicepFile)"
          az bicep build --file $(bicepFile)
        displayName: 'Lint Bicep File'

- stage: Validate
  dependsOn: Lint
  jobs:
  - job: ValidateBicepCode
    displayName: 'Validate Bicep Code'
    steps:
      - script: |
          echo "Generating parameters file from bicepparam..."
          az bicep build-params --file $(System.DefaultWorkingDirectory)/environments/$(environmentName)/$(environmentName).bicepparam --outfile $(parametersFile)
        displayName: 'Generate Parameters File'
      - task: AzureCLI@2
        name: ValidateARMTemplate
        inputs:
          azureSubscription: $(ServiceConnectionName)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            echo "Validating ARM Template for Bicep file: $(bicepFile) with parameters: $(parametersFile)"
            az deployment group validate --resource-group $(ResourceGroupName) --template-file $(bicepFile) --parameters @$(parametersFile)
      - script: |
          echo "Validation completed successfully."
        displayName: 'Validation Success Message'
      - script: |
          echo "If validation failed, check the previous step's output for error details."
        displayName: 'Validation Error Handling'

- stage: Preview
  dependsOn: Validate
  jobs:
    - job: PreviewAzureChanges
      displayName: 'Preview Azure Changes'
      steps:
        - task: AzureCLI@2
          name: PreviewWhatIf
          inputs:
            azureSubscription: $(ServiceConnectionName)
            scriptType: bash
            scriptLocation: inlineScript
            inlineScript: |
              echo "What-if deployment for Bicep file: $(bicepFile) with parameters: $(parametersFile)"
              az deployment group what-if --resource-group $(ResourceGroupName) --template-file $(bicepFile) --parameters @$(parametersFile) > whatif-output.txt
        - publish: whatif-output.txt
          artifact: whatif-output
          displayName: 'Publish What-if Output Artifact'
        - script: |
            echo "What-if analysis completed. Review the output above for changes."
          displayName: 'What-if Analysis Completion Message'
        - script: |
            echo "If the what-if analysis indicates issues, review the previous step's output."
          displayName: 'What-if Analysis Error Handling'

- stage: Deploy
  dependsOn: Preview
  jobs:
  - deployment: DeployInfrastructure
    displayName: 'Deploy Infrastructure'
    environment: '$(environmentName)'
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self
            - task: AzureResourceManagerTemplateDeployment@3
              name: DeployInfrastructure
              displayName: 'Deploy Infrastructure'
              inputs:
                azureResourceManagerConnection: $(ServiceConnectionName)
                resourceGroupName: $(ResourceGroupName)
                location: $(deploymentDefaultLocation)
                deploymentMode: Incremental
                csmFile: $(bicepFile)
                csmParametersFile: $(parametersFile)
            - task: AzureCLI@2
              name: PostDeploymentValidation
              displayName: 'Post-Deployment Resource Validation'
              inputs:
                azureSubscription: $(ServiceConnectionName)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  echo "Validating Key Vault deployment..."
                  az keyvault show --name $(clientName)-kv-$(ResourceGroupName | tr '[:upper:]' '[:lower:]') --resource-group $(ResourceGroupName)
            - task: AzureCLI@2
              name: DeploymentNotification
              displayName: 'Notify Deployment Result'
              inputs:
                azureSubscription: $(ServiceConnectionName)
                scriptType: bash
                scriptLocation: inlineScript
                inlineScript: |
                  echo "Deployment completed for resource group $(ResourceGroupName)."